# version: '3'
# services:
#   backend:
#     depends_on:
#       - mysqldb
#     build:
#       context: ./Backend
#       dockerfile: Dockerfile
#     ports:
#       - "8080:8080"
#     container_name: backend
#   frontend:
#     build:
#       context: ./WebApp
#       dockerfile: Dockerfile
#     ports:
#       - "8081:8081"
#     container_name: webapp
#   mysqldb:
#     image: mysql:5.7
#     restart: unless-stopped
#     environment:
#       - MYSQL_ROOT_PASSWORD=admin16!
#       - MYSQL_DATABASE=dslab
#     ports:
#       - 3307:3306
#     volumes:
#       - db:/var/lib/mysql
# volumes:
#   db:
# version: "3.8"

# services:
#   mysqldb:
#     image: mysql:5.7
#     restart: unless-stopped
#     env_file: ./.env
#     environment:
#       - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
#       - MYSQL_DATABASE=$MYSQLDB_DATABASE
#     ports:
#       - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
#     volumes:
#       - db:/var/lib/mysql
#   frontend:
#     build:
#       context: ./WebApp
#       dockerfile: Dockerfile
#     ports:
#       - $WEBAPP_LOCAL_PORT:$WEBAPP_DOCKER_PORT
#     container_name: webapp
#   backend:
#     depends_on:
#       - mysqldb
#     build: ./Backend
#     restart: on-failure
#     env_file: ./.env
#     ports:
#       - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
#     environment:
#       SPRING_APPLICATION_JSON: '{
#         "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
#         "spring.datasource.username" : "$MYSQLDB_USER",
#         "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
#         "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
#         "spring.jpa.hibernate.ddl-auto" : "update"}'
#     volumes:
#       - .m2:/root/.m2
#     stdin_open: true
#     tty: true

# volumes:
#   db:
version: '3.1'

services:

  postgresdb:
    image: mysql:5.7
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=admin16!
      - POSTGRES_USER=root
      - POSTGRES_DB=dslab

  todobackend:
    image: <QUAYusername>todobackend:v0.1
    ports:
      - 8080:8080
    depends_on:
      - postgresdb

  todoui:
    image: <QUAYusername>/todoui:v1
    ports:
      - 8081:8081


